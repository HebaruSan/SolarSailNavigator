* TODO Manual sail navigation [13/24]
** DONE Propagate trajectory XX days ahead at current attitude
** DONE Draw start and end points
** DONE Collect intermediate points
** DONE Draw points along trajectory
** DONE Classes for controls and previews
** DONE Make non-array control persistant
** DONE Add additional steering/duration segments [2/2]
*** DONE Controls and segments as arrays
*** DONE buttons to add/remove segments
** DONE Show orbit at end of segments
** DONE Make control history persistant
*** DONE Cone angles
*** DONE Clock angles
*** DONE Durations
*** DONE Warp factors
** DONE Update preview when controls updated [2/2]
*** DONE Add toggle button to show preview or not
*** DONE Calculate when controls updated
** TODO Add/remove controls anywhere in sequence
** TODO Other time unit choices [2/4]
*** DONE Days [2/2]
**** DONE +/-
**** DONE +/- 10
*** DONE Hours [1/1]
**** DONE +/-
*** TODO Minutes
*** TODO Seconds
** TODO Allow +/-180 deg cone angles
** DONE Draw fewer segments in preview
*** Condition to sample? Period of orbit0, divide by 360, sample when elapsed time exceeds?
*** Or... calculate period with each new perturbed orbit
**** Divide by 360
**** Check if that much time has passed since last sampling?
** DONE Pre-calculate line render points of sail trajectory
** TODO Make preview line width scale to zoom (or fixed screen width ala VectorLine) [1/2]
*** DONE Scale LineRenderer to MapCamera distance
*** TODO VectorLine
** TODO Select target body [6/8]
*** DONE Draw line to target from closest approach
*** DONE Show duration from now to closest approach
*** DONE Show distance at closest approach
*** DONE Convert distance based on magnitude (m, km, Gm)
*** DONE Show speed difference at closest approach
*** DONE Convert speed based on magnitude (m/s, km/s)
*** TODO Show if distance inside SOI
*** TODO Show if speed indicates capture?
**** Is this even possible?
** TODO Improve propagation accuracy
*** Currently multiplies acceleration by time step size and adds to velocity
*** Could integrate for one time step using Runge Kutta
** TODO Initial time calculation
Currently need to manually click "Set to Now"
** DONE Make control GUI fields fixed width
** TODO Draw mini sails at points along map to show attitude
** TODO Warp button to execute sequence?
*** Currently use MechJeb's WarpHelper
** TODO Internal NextClosestApproach
*** Currently using MechJeb's
** TODO Automatically calculate warp based on duration of segment instead of manual selection
*** To avoid killing KSP by calculating too many time steps
** TODO Make final orbit render work for parabolic/hyberbolic orbits
* TODO Make new solar sail models [0/5]
** TODO Square sail (LightSail, Lunar Flashlight, NEA Scout)
*** 4 triangular panels with billowed shape
*** Wrinkled looking surface
** TODO Sunjammer
*** 4 triangular panels with stripe net and billow in between
** TODO Steering vanes
*** Vanes at boom tips that rotate to face sun with ~20 deg cant for stability
** TODO Halley Rendezvous square sail
*** Big, billowed sail with masts and stays
** TODO IKAROS
*** Animated rotation
**** Scale rotation speed to sensible amount during time warp
*** Animate change in reflective control device color as it performs attitude maneuvers
* TODO Make sail deployment a staged event that can only happen once
* TODO Realistic sail attitude control
** Vanes to cause solar torque about CM
** Gimbaled boom to shift CM
** Realistic moments of inertia (i.e. BIG)
** IKAROS style thin film reflective control devices
* TODO Automatic navigation
** Using manual navigation as initial guess, perform local optimization (e.g. gradient) to calculate cones/clocks/durations
** Orbital rendezvous
*** Select target
*** Specify number of control nodes
*** Optimal control method runs behind scenes to generate angle/time profile
*** Allow execution of steering strategy
** Locally optimal steering strategies
*** Maximize rate of change of one orbit element or combination of elements
* TODO Sails on Rails [0/2]
** Problem
As currently designed KSP seems to run Kepler orbits when a spacecraft
is not active.  Is there a way to keep the sail propagator running in
the background to allow command profiles to complete? This would use
extra CPU. May want a notification when the sequence is completed.
** TODO Save preview trajectory to persistant variables
** TODO Set orbit state to that in the preview when you return to the spacecraft
* TODO Modularize functions [5/8]
** TODO steering during timewarp so it can be used elsewhere, e.g. ion engines
** TODO manual navigation
** TODO automatic navigation
** DONE check if spacecraft in sun
** DONE sail force calculation
** DONE sail EOM
** DONE sail EOM propagation
** DONE SailFrame
* TODO Planet centered sailing [0/7]
  Orbit element control laws. See:
*** http://strathprints.strath.ac.uk/6255/
*** http://strathprints.strath.ac.uk/6252/
*** TODO SMA
*** TODO rp
*** TODO ecc
*** TODO ra
*** TODO Inclination
*** TODO AoP
*** TODO Blended?
* TODO Make a low thrust navigation tool for any low thrust propulsion, sail, ion engine, etc [1/2]
** DONE Propulsion part module
*** Force model
*** Realtime propagation
*** Time warp propagation
*** On/off & throttle controls
** TODO Separate navigation module that is applied to low thrust parts
*** Steering and preview tacked on to low thrust
*** Use patched config files to apply?
*** Calculate mass use for reaction thrusters
*** Save trajectory and mass prediction to persistant variables
*** Update vessel orbit and mass when returning to them
* DONE Evaluate Persistent Rotation for use as attitude control
** Locks current attitude with respect to a planet.
** Need a way to specify angles and a schedule of future attitude changes
** May want more reference frame options than to a planet.
** Want to specify numbers relative to those reference frames.
** Possibly, upgrade persistent rotation with these options?
*** Then, the navigation tool needs to access PersistentRotation to update the attitude.
* DONE Make preview work for persistent thrust engines [5/5]
** DONE Preview trajectory
** DONE Final orbit
** DONE Line to target
** DONE Orbit element difference with target
** DONE Find & fix remaining bug of undefined variable
*** target line object was null
* TODO Make preview work for multiple sails/engines
* TODO Disable/enable sails for a time segment
** Throttle already disables/enables engines
* TODO Test functionality for multiple sails/engines
* DONE Move PersistentThrust plugin into SolarSailNavigator [2/2]
** DONE Put source in sub-folder with KSPI license
** DONE Update Makefiles
* DONE Draw target line when target selected, not just when preview first calculated
* DONE Test that propagation matches prediction for engines
* TODO Resize window when objects & text removed (e.g. when preview or target deselected)
* DONE Update targeting line and error when target selected		:BUG:
* TODO Show mass consumption for flight profile			    :FEATURE:
* TODO Show mass consumption remaining				    :FEATURE:
* TODO Warn when mass consumption exceeds remaining		    :FEATURE:
* TODO Warn when future power usage of navigation plan exceeds vessel's generation ability :FEATURE:
* DONE Toggle buttons to show [4/4]
** DONE Final orbit elements
** DONE Final orbit elements error with target
** DONE Final orbit
** DONE Preview
* DONE Draw trajectory segment when throttle is 0			:BUG:
* TODO Make "Navigation", "Preview", and "Controls" work for both sails and engines :FEATURE:
* TODO Show time remaining of sequence (startTime - currentTime + duration) :FEATURE:
* TODO Put navigator into a part that queries the vessel for persistent thrust parts :FEATURE:
* TODO Require navigation instruments [0/3]			   :WISHLIST:
** TODO Sun sensor (for sail)
** TODO Star tracker
** TODO Radio
* TODO Show Start Time in years/days/hours/seconds or Real Solar System time :FEATURE:
* TODO Allow manually entering control numbers (angles/times)	    :FEATURE:
* TODO In preview, use alignment of sails and engines - don't just assume they are aligned in the correct direction with the "up" vector. :BUG:
